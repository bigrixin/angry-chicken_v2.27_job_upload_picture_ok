@using MvcCheckBoxList.Model;
@model MyAbilityFirst.Models.JobViewModel

@{
	ViewBag.Title = "Edit";
}

<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/Shared/datepicker.js")" type="text/javascript"></script>

<div class="col-md-3">
	@Html.Action("_MyAccountSidebar", "MyAccount")
</div>
<div class="col-md-7">

	<h4 class="page-header">Edit job posting</h4>

	@using (Html.BeginForm("Edit", "Job", FormMethod.Post, new { enctype = "multipart/form-data" }))
	{
	@Html.AntiForgeryToken()

		<div class="form-horizontal">
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			@Html.HiddenFor(model => model.Id)

			<div class="form-group">
				@Html.LabelFor(model => model.PatientId, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownListFor(model => model.PatientId, Model.PatientDropDownList, new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.PatientId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.SuburbId, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownListFor(model => model.SuburbId, Model.SuburbDropDownList, new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.SuburbId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.GenderId, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownListFor(model => model.GenderId, Model.GenderDropDownList, new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.ServiceId, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownListFor(model => model.ServiceId, Model.ServiceDropDownList, new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.ServiceId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.ServicedAt, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.ServicedAt, new { htmlAttributes = new { @class = "form-control datepicker" } })
					@Html.ValidationMessageFor(model => model.ServicedAt, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.PictureURL, htmlAttributes: new { @class = "control-label col-md-2" })

				<div class="col-md-7">
					<input type="file" name="files" id="uploadFile" accept="image/*" capture class="btn btn-default btn-sm" value=@ViewBag.pictureURL />
				</div>
				<div class="col-md-1">
					@if (!String.IsNullOrEmpty(Model.PictureURL))
					{
					<img src="@Url.Content(Model.PictureURL)" id="pictureFileId" height="30" width="30" border="0">
						<br />
					}
				</div>
				<div class="col-md-2">
					<input type="button" name="cancelUploadFile" id="cancelUploadFile" class="btn btn-default btn-sm" value="Cancel" />
				</div>
				<div class="col-md-6" hidden="hidden">
					@Html.EditorFor(model => model.PictureURL, new { htmlAttributes = new { @class = "form-control", @id = "fileRecord", @readonly = "readonly", @value = @ViewBag.pictureURL } })
					@Html.ValidationMessageFor(model => model.PictureURL, "", new { @class = "text-danger" })

				</div>
				<div class="col-md-offset-2 col-md-10">

					<span style="color:red">
						* Allowed upload file JPG / GIF / BMP / PNG only, Max. 5 MB
					</span>

				</div>
			</div>
			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="Save" class="btn btn-default" />
				</div>
			</div>
		</div>
	}

	<div>
		@Html.ActionLink("Back to List", "Index")
	</div>

</div>